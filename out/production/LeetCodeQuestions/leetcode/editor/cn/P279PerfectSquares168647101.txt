    class Solution {
        static ArrayList<Integer> dp = new ArrayList<>();
        public int numSquares(int n) {
            //第一次进入将 0 加入
            if(dp.size() == 0){
                dp.add(0);
            }
            //之前是否计算过 n
            if(dp.size() <= n){
                //接着之前最后一个值开始计算
                for (int i = dp.size(); i <= n; i++) {
                    int min = Integer.MAX_VALUE;
                    for (int j = 1; j * j <= i; j++) {
                        min = Math.min(min, dp.get(i - j * j) + 1);
                    }
                    dp.add(min);
                }
            }
            return dp.get(n);
        }
    }

//runtime:8 ms
//memory:35.5 MB
