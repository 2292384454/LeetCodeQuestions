    class Solution {
        public int search(int[] arr, int target) {
            if (arr.length == 0) {
                return -1;//数组长度为0
            }
            if (arr[0] == target) {
                return 0;//数组第一个元素就是target（主要为了防止数组元素全部相等的情况）
            }
            int low = 0, high = arr.length - 1, mid;
            if (arr[low] == arr[high]) {//如果数组刚好第一个元素与最后一个元素相等
                while (high >= 0 && arr[high] == arr[low]) {
                    high--;//就跳过最后的所有与nums[0]相等的元素
                }
            }
            while (low <= high) {
                mid = (high + low) >> 1;
                if (arr[mid] == target) {
                    high = mid;
                }
                if ((arr[mid] < target && target < arr[0]) || (arr[0] <= arr[mid] && (arr[mid] < target || target < arr[0]))) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
            return arr[low] == target ? low : -1;
        }
    }

//runtime:0 ms
//memory:39.1 MB
